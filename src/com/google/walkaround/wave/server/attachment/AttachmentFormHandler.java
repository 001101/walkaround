/*
 * Copyright 2011 Google Inc. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.google.walkaround.wave.server.attachment;

import com.google.appengine.api.blobstore.BlobstoreService;
import com.google.gxp.base.GxpContext;
import com.google.inject.Inject;
import com.google.walkaround.util.server.servlet.AbstractHandler;
import com.google.walkaround.wave.server.Flag;
import com.google.walkaround.wave.server.FlagName;
import com.google.walkaround.wave.server.gxp.UploadForm;

import java.io.IOException;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

/**
 * Displays an upload form suitable for inclusion in an iframe.
 *
 * We use iframes because the upload URL generated by the blobstore can only be
 * used once, so the alternative would be to use an XHR to prepare the upload
 * form's action each time, unecessary effort for now. In the future we could do
 * a pre-emptive XHR to grab a few upload tokens in advance - I'm not sure how
 * long it takes for them to expire though.
 *
 * @author danilatos@google.com (Daniel Danilatos)
 */
public class AttachmentFormHandler extends AbstractHandler {

  @Inject BlobstoreService blobstoreService;
  @Inject @Flag(FlagName.ANALYTICS_ACCOUNT) String analyticsAccount;

  @Override
  public void doGet(HttpServletRequest req, HttpServletResponse resp) throws IOException {
    String formAction = blobstoreService.createUploadUrl("/upload");
    if (formAction == null) {
      throw new RuntimeException("Null blobstore upload url");
    }
    UploadForm.write(resp.getWriter(), new GxpContext(getLocale(req)),
        analyticsAccount, formAction);
  }
}
